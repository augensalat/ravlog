#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.14
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1244688693',
        'name' => 'sidebar.tt',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "<div id=\"sidebar\">\n	<div id=\"search_pane\">\n	<form action=\"/search\" method=\"post\">\n	<p>\n		<span>Search:</span>\n		<input type=\"text\" name=\"phrase\" size=\"20\" onkeyup=\"check_articles(this);\"/>\n		<div style=\"display: none;\" id=\"search_board\"></div>\n	</p>\n	</form>\n	</div>\n	<br class=\"clear\"/>\n	<div style=\"padding-left: 20px\">\n	<h2>Calendar</h2>\n			<div id=\"calendar\">\n					";
    #line 15 "/home/gshank/RavLog/root/templates/default/sidebar.tt"
    $output .=  $stash->get('calendar');
    $output .=  "\n			</div>\n	<h3>Tags</h3>\n	";
    #line 18 "/home/gshank/RavLog/root/templates/default/sidebar.tt"
    $output .=  $context->process('shared/tags_list.tt');
    $output .=  "\n	<h3>Archives</h3>\n	";
    #line 20 "/home/gshank/RavLog/root/templates/default/sidebar.tt"
    $output .=  $context->process('shared/archives_list.tt');
    $output .=  "\n	<h3>Links</h3>\n	";
    #line 22 "/home/gshank/RavLog/root/templates/default/sidebar.tt"
    $output .=  $context->process('shared/links_list.tt');
    $output .=  "\n	<h3>Syndicate</h3>\n	";
    #line 24 "/home/gshank/RavLog/root/templates/default/sidebar.tt"
    $output .=  $context->process('shared/syndicate_list.tt');
    $output .=  "\n	<h3>Meta</h3>\n	";
    #line 26 "/home/gshank/RavLog/root/templates/default/sidebar.tt"
    $output .=  $context->process('shared/login_list.tt');
    $output .=  "\n	</div>\n</div>\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
