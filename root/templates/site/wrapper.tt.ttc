#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.14
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1244990917',
        'name' => 'site/wrapper.tt',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    #line 0 "/home/gshank/RavLog/root/templates/site/wrapper.tt"
    if ($stash->get(['template', 0, 'name', 0, 'match', [ '\.(css|js|txt)' ]])) {
    #line 0 "/home/gshank/RavLog/root/templates/site/wrapper.tt"
    $output .=  $stash->get(['debug', [ ("Passing page through as text: " . $stash->get(['template', 0, 'name', 0])) ]]);
    #line 0 "/home/gshank/RavLog/root/templates/site/wrapper.tt"
    $output .=  $stash->get('content');
    }
    else {
    #line 0 "/home/gshank/RavLog/root/templates/site/wrapper.tt"
    $output .=  $stash->get(['debug', [ ("Applying HTML page layout wrappers to " . $stash->get(['template', 0, 'name', 0]) . "\n") ]]);
    #line 0 "/home/gshank/RavLog/root/templates/site/wrapper.tt"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  $stash->get('content');
        $context->include('layout.tt', { 'content', $output }); 
    };
    
    }
    
    
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
